{"version":3,"file":"static/js/918.bbce9794.chunk.js","mappings":"uOAGaA,GAAWC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,mJ,mBCARE,EAAU,WACrB,OACE,iBAAKC,UAAU,UAAf,WACE,iBAAKA,UAAU,OAAf,WACE,SAAC,MAAD,CAAQA,UAAU,gBAClB,cAAGA,UAAU,aAAb,SAA0B,cAE5B,iBAAKA,UAAU,eAAf,WACE,SAACJ,EAAD,CAAUK,GAAG,SAASD,UAAU,gBAAhC,SAAgD,kEAGhD,SAACJ,EAAD,CAAUK,GAAG,UAAUD,UAAU,gBAAjC,SAAiD,uGAGjD,SAACJ,EAAD,CAAUK,GAAG,YAAYD,UAAU,gBAAnC,SAAmD,kEAGnD,SAACJ,EAAD,CAAUK,GAAG,WAAWD,UAAU,gBAAlC,SAAkD,gDAGlD,SAACJ,EAAD,CAAUK,GAAG,YAAYD,UAAU,gBAAnC,SAAmD,gEAM1D,E,8BCuCD,EApDc,WACZ,OAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAEMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IA4B/B,OAtBAC,EAAAA,EAAAA,YAAU,WACgBC,aAAaC,QAAQ,gBAE3CP,GAASQ,EAAAA,EAAAA,OACNC,MAAK,WACJZ,GAAa,EACd,IACAa,OAAM,SAAAC,GACLC,QAAQD,MAAM,0BAA2BA,GACzCd,GAAa,EACd,IAEHA,GAAa,EAEhB,GAAE,CAACG,KAEJK,EAAAA,EAAAA,YAAU,WACHT,GAAcM,GACjBJ,EAAS,SAEZ,GAAE,CAACF,EAAWM,EAAYJ,IAEvBF,GACK,SAACiB,EAAA,EAAD,KAIP,iBAAKC,MAAO,CAAEC,QAAS,QAAvB,WACE,SAACvB,EAAD,KACA,gBACEsB,MAAO,CACLE,QAAS,OACTC,MAAO,QAHX,UAME,SAAC,KAAD,QAIP,C,gFClEM,IAOMb,EAAmB,SAAAc,GAAK,OAAIA,EAAMC,KAAKjB,UAAf,EAQxBkB,EAAuB,SAAAF,GAAK,OAAIA,EAAMC,KAAKE,cAAf,C","sources":["components/AdminPage/Sidebar/Sidebar.styled.jsx","components/AdminPage/Sidebar/Sidebar.jsx","pages/Admin/Admin.jsx","redux/Auth/AuthSelectors.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const PageLink = styled(NavLink)`\n  color: #ffffff;\n  &.active {\n    color: var(--accent-color);\n    background-color: var(--admin-items-bg-color);\n  }\n`;\n","import { PageLink } from './Sidebar.styled';\nimport { FiUser } from 'react-icons/fi';\n\nexport const Sidebar = () => {\n  return (\n    <div className=\"sidebar\">\n      <div className=\"user\">\n        <FiUser className=\"user__icon\" />\n        <p className=\"user__name\">Admin</p>\n      </div>\n      <nav className=\"sidebar__nav\">\n        <PageLink to=\"orders\" className=\"sidebar__item\">\n          Замовлення\n        </PageLink>\n        <PageLink to=\"gallery\" className=\"sidebar__item\">\n          Галерея зображень\n        </PageLink>\n        <PageLink to=\"employees\" className=\"sidebar__item\">\n          Працівники\n        </PageLink>\n        <PageLink to=\"services\" className=\"sidebar__item\">\n          Послуги\n        </PageLink>\n        <PageLink to=\"reporting\" className=\"sidebar__item\">\n          Звітність\n        </PageLink>\n      </nav>\n    </div>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport { Sidebar } from 'components/AdminPage/Sidebar/Sidebar';\nimport { Loading } from 'components/Loading/Loading';\n\nimport {\n  selectIsLoggedIn,\n  // selectIsAuthLoading,\n} from 'redux/Auth/AuthSelectors';\nimport { refresh } from 'redux/Auth/AuthOperations';\n// import { selectIsLoadingEmployees } from 'redux/employees/employeesSelectors';\n// import { selectIsLoadingServices } from 'redux/services/servicesSelectors';\n// import { selectIsLoadingOrders } from 'redux/orders/ordersSelectors';\n\nconst Admin = () => {\n  const [isLoading, setIsLoading] = useState(true);\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  // const isAuthLoading = useSelector(selectIsAuthLoading);\n  // const isOrdersLoading = useSelector(selectIsLoadingOrders);\n  // const isEmployeesLoading = useSelector(selectIsLoadingEmployees);\n  // const isServicesLoading = useSelector(selectIsLoadingServices);\n\n  useEffect(() => {\n    const LocalStoreToken = localStorage.getItem('persist:auth');\n    if (LocalStoreToken) {\n      dispatch(refresh())\n        .then(() => {\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.error('Error refreshing token:', error);\n          setIsLoading(false);\n        });\n    } else {\n      setIsLoading(false);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (!isLoading && !isLoggedIn) {\n      navigate('/login');\n    }\n  }, [isLoading, isLoggedIn, navigate]);\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <div style={{ display: 'flex' }}>\n      <Sidebar />\n      <div\n        style={{\n          padding: '40px',\n          width: '100%',\n        }}\n      >\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n\n// export const selectUserAvatar = state => state.auth.user.avatarURL;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n\n// export const selectIsLoading = state => state.auth.isLoading;\n\n// export const selectUserId = state => state.auth.user.id;\n"],"names":["PageLink","styled","NavLink","Sidebar","className","to","useState","isLoading","setIsLoading","navigate","useNavigate","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","useEffect","localStorage","getItem","refresh","then","catch","error","console","Loading","style","display","padding","width","state","auth","selectAdministrators","administrators"],"sourceRoot":""}