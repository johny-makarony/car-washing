{"version":3,"file":"static/js/613.34d30ed5.chunk.js","mappings":"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","sources":["pages/ReportingPage/ReportingPage.styled.jsx","redux/reporting/reportingSelectors.js","components/AdminPage/ReportingTable/ReportingTable.styled.jsx","components/AdminPage/ReportingTable/ReportingTable.jsx","components/Container/Container.styled.jsx","pages/ReportingPage/ReportingPage.jsx","utils/formatedDate.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 30px;\n  padding: 50px;\n  color: black;\n  background-color: white;\n  border-radius: 12px;\n`;\n\nexport const DateLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  gap: 30px;\n  padding: 50px;\n  color: black;\n  background-color: white;\n  border-radius: 12px;\n`;\n","export const selectOrders = state => state.reports.items;\n\nexport const selectEmployees = state => state.reports.employees;\n\nexport const selectPayments = state => state.reports.payments;\n\nexport const selectIsLoading = state => state.reports.isLoading;\n\nexport const selectError = state => state.reports.error;\n","import styled from '@emotion/styled';\n\nexport const TableContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  column-gap: 20px;\n  margin-top: 20px;\n`;\n\nexport const TableThumb = styled.div`\n  flex-basis: calc(50% - 10px);\n  margin-top: 20px;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const Title = styled.h2`\n  padding: 10px;\n  text-align: center;\n  width: 100%;\n  color: black;\n  background-color: #e6e6e6;\n  font-size: 20px;\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n  background-color: #f4f4f4;\n  color: black;\n  border-bottom-left-radius: 8px;\n  border-bottom-right-radius: 8px;\n  overflow: hidden;\n`;\n\nexport const TableHead = styled.thead`\n  background-color: #0073e6;\n  color: #fff;\n  text-align: left;\n`;\n\nexport const TableRow = styled.tr`\n  &:nth-of-type(even) {\n    background-color: #e6e6e6;\n  }\n`;\n\nexport const TableHeader = styled.th`\n  padding: 10px;\n`;\n\nexport const TableData = styled.td`\n  padding: 10px;\n`;\n\nexport const TableCellServices = styled.td`\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n\n  p {\n    margin: 0;\n    padding: 5px 0;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport {\n  selectOrders,\n  selectEmployees,\n  selectPayments,\n} from 'redux/reporting/reportingSelectors';\n\nimport { formatedDate } from 'utils/formatedDate';\n\nimport {\n  TableContainer,\n  TableThumb,\n  Title,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableData,\n  TableCellServices,\n} from './ReportingTable.styled';\n\nexport const ReportingTable = () => {\n  const orders = useSelector(selectOrders);\n  const employees = useSelector(selectEmployees);\n  const payments = useSelector(selectPayments);\n\n  return (\n    <TableContainer>\n      {orders && orders.length > 0 && (\n        <>\n          <Title>Звітність за обраний період</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Час заїзду</TableHeader>\n                <TableHeader>Марка ДНЗ</TableHeader>\n                <TableHeader>Контакти клієнта</TableHeader>\n                <TableHeader>Послуги</TableHeader>\n                <TableHeader>Вартість, грн</TableHeader>\n                <TableHeader>Спосіб оплати</TableHeader>\n                <TableHeader>Адміністратор</TableHeader>\n                <TableHeader>Працівник</TableHeader>\n              </TableRow>\n            </TableHead>\n            <tbody>\n              {orders.map(order => (\n                <TableRow key={order._id}>\n                  <TableData>{formatedDate(order.orderDate)}</TableData>\n                  <TableData>{order.serviceObject}</TableData>\n                  <TableData>{order.clientPhone}</TableData>\n                  <TableCellServices>\n                    {order.services.map(service => (\n                      <p key={service._id}>{service.name}</p>\n                    ))}\n                  </TableCellServices>\n                  <TableData>{order.discountedCostOrder}</TableData>\n                  <TableData>{order.payment}</TableData>\n                  <TableData>{order.administrator}</TableData>\n                  <TableData>{order.washer}</TableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n\n      {employees && employees.length > 0 && (\n        <TableThumb>\n          <Title>Заробітна плата</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Ім'я</TableHeader>\n                <TableHeader>грн</TableHeader>\n              </TableRow>\n            </TableHead>\n            <tbody>\n              {employees.map(employee => (\n                <TableRow key={employee.name}>\n                  <TableData>{employee.name}</TableData>\n                  <TableData>{employee.payment}</TableData>\n                </TableRow>\n              ))}\n            </tbody>\n          </Table>\n        </TableThumb>\n      )}\n      {payments && (\n        <TableThumb>\n          <Title>Розрахунок</Title>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableHeader>Категорія</TableHeader>\n                <TableHeader>грн</TableHeader>\n              </TableRow>\n            </TableHead>\n            <tbody>\n              <TableRow>\n                <TableData>Всього каса:</TableData>\n                <TableData>{payments.totalPayments}</TableData>\n              </TableRow>\n              <TableRow>\n                <TableData>Всього готівкою:</TableData>\n                <TableData>{payments.totalCash}</TableData>\n              </TableRow>\n              <TableRow>\n                <TableData>Всього терміналом:</TableData>\n                <TableData>{payments.totalCard}</TableData>\n              </TableRow>\n              <TableRow>\n                <TableData>Всього заробітна плата:</TableData>\n                <TableData>{payments.totalEmployeesPayments}</TableData>\n              </TableRow>\n              <TableRow>\n                <TableData>Прибуток:</TableData>\n                <TableData>{payments.profit}</TableData>\n              </TableRow>\n            </tbody>\n          </Table>\n        </TableThumb>\n      )}\n    </TableContainer>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n  max-width: 480px;\n\n  //   @media screen and (min-width: 480px) {\n  //     max-width: 480px;\n  //   }\n\n  @media screen and (min-width: 768px) {\n    max-width: 768px;\n  }\n\n  @media screen and (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import { useFormik } from 'formik';\nimport { TextField } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { SearchForm, DateLabel } from './ReportingPage.styled';\nimport { Loading } from 'components/Loading/Loading';\nimport { ReportingTable } from 'components/AdminPage/ReportingTable/ReportingTable';\nimport { Container } from 'components/Container/Container.styled';\n\nimport { selectIsLoading } from 'redux/reporting/reportingSelectors';\nimport { getReportingByDates } from 'redux/reporting/reportingOperations';\n\nconst ReportingPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  const formik = useFormik({\n    initialValues: {\n      startDate: '',\n      endDate: '',\n    },\n    onSubmit: values => {\n      dispatch(getReportingByDates(values));\n    },\n  });\n\n  if (isLoading) {\n    return <Loading />;\n  }\n\n  return (\n    <section>\n      <Container>\n        <SearchForm onSubmit={formik.handleSubmit}>\n          <DateLabel>\n            Початок\n            <TextField\n              required\n              type=\"date\"\n              id=\"startDate\"\n              name=\"startDate\"\n              value={formik.values.startDate}\n              onChange={formik.handleChange}\n              variant=\"standard\"\n              className=\"field\"\n            />\n          </DateLabel>\n          <DateLabel>\n            Кінець\n            <TextField\n              required\n              type=\"date\"\n              id=\"endDate\"\n              name=\"endDate\"\n              value={formik.values.endDate}\n              onChange={formik.handleChange}\n              variant=\"standard\"\n              className=\"field\"\n            />\n          </DateLabel>\n          <button type=\"submit\" className=\"btn\">\n            Пошук\n          </button>\n        </SearchForm>\n        <ReportingTable />\n      </Container>\n    </section>\n  );\n};\n\nexport default ReportingPage;\n","export function formatedDate(unformatedDate) {\n  const dateTime = new Date(unformatedDate);\n\n  const date = dateTime.toLocaleDateString('uk-UA', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n\n  const time = dateTime.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${date} | ${time}`;\n}\n"],"names":["SearchForm","styled","DateLabel","selectOrders","state","reports","items","selectEmployees","employees","selectPayments","payments","selectIsLoading","isLoading","TableContainer","TableThumb","Title","Table","TableHead","TableRow","TableHeader","TableData","TableCellServices","ReportingTable","orders","useSelector","length","map","order","formatedDate","orderDate","serviceObject","clientPhone","services","service","name","_id","discountedCostOrder","payment","administrator","washer","employee","totalPayments","totalCash","totalCard","totalEmployeesPayments","profit","Container","dispatch","useDispatch","formik","useFormik","initialValues","startDate","endDate","onSubmit","values","getReportingByDates","Loading","handleSubmit","TextField","required","type","id","value","onChange","handleChange","variant","className","unformatedDate","dateTime","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute"],"sourceRoot":""}