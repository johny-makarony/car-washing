{"version":3,"file":"static/js/965.74ec6a33.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModalAddService/ModalAddService.jsx","pages/ServicesPage/ServicesPage.jsx","redux/services/servicesSelectors.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { Backdrop, Modal, Form, Title, CloseButton } from '../Modal.styles';\nimport { TextField, Select, MenuItem, InputLabel } from '@mui/material';\n\nimport { addService } from 'redux/services/servicesOperations';\n\nexport const ModalAddService = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      category: '',\n      name: '',\n      pricePerMeter: '',\n      price: '',\n      employeePercent: '',\n    },\n    onSubmit: values => {\n      dispatch(addService(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <Modal>\n        <CloseButton type=\"button\" onClick={handleExitModal}>\n          Закрити\n        </CloseButton>\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>Додати послугу</Title>\n          <InputLabel id=\"category-label\">Оберіть об'єкт послуги</InputLabel>\n          <Select\n            required\n            labelId=\"category-label\"\n            id=\"category\"\n            name=\"category\"\n            value={formik.values.category}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Килим\">Килим</MenuItem>\n          </Select>\n\n          <TextField\n            required\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Назва послуги\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <InputLabel id=\"pricePerMeter-label\">Вартість за м²?</InputLabel>\n          <Select\n            required\n            labelId=\"pricePerMeter-label\"\n            id=\"pricePerMeter\"\n            name=\"pricePerMeter\"\n            value={formik.values.pricePerMeter}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            <MenuItem value=\"Так\">Так</MenuItem>\n            <MenuItem value=\"Ні\">Ні</MenuItem>\n          </Select>\n          <TextField\n            required\n            type=\"text\"\n            id=\"price\"\n            name=\"price\"\n            label=\"Ціна послуги\"\n            value={formik.values.price}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <TextField\n            required\n            type=\"text\"\n            id=\"employeePercent\"\n            name=\"employeePercent\"\n            label=\"Відсоток працівнику\"\n            value={formik.values.employeePercent}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n\n          <button type=\"submit\" className=\"btn\">\n            Додати\n          </button>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ModalAddService } from 'components/AdminPage/Modals/ModalAddService/ModalAddService';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\n\nconst ServicesPage = () => {\n  const services = useSelector(selectGetAllServices);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <section>\n      <div\n        style={{\n          marginBottom: '50px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <h2>Послуги</h2>\n        <button\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          className=\"btn\"\n          style={{ color: 'var(--white-color)' }}\n        >\n          Додати послугу\n        </button>\n      </div>\n\n      <ul\n        className=\"list\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n      >\n        {services.map(service => (\n          <li key={service._id}>\n            <p>{`Об'єкт послуги: ${service.category}`}</p>\n            <p>{`Назва послуги: ${service.name}`}</p>\n            {service.pricePerMeter && <p>Вартість за м²: Так</p>}\n            <p>{`Вартість: ${service.price} грн`}</p>\n            <p>{`Відсоток працівника: ${service.employeePercent}%`}</p>\n          </li>\n        ))}\n      </ul>\n      {isOpenModal && <ModalAddService handleExitModal={handleExitModal} />}\n    </section>\n  );\n};\n\nexport default ServicesPage;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n"],"names":["ModalAddService","props","dispatch","useDispatch","handleExitModal","formik","useFormik","initialValues","category","name","pricePerMeter","price","employeePercent","onSubmit","values","addService","onClick","e","target","currentTarget","type","handleSubmit","InputLabel","id","Select","required","labelId","value","onChange","handleChange","variant","style","width","MenuItem","TextField","label","className","services","useSelector","selectGetAllServices","useState","isOpenModal","setOpenModal","useEffect","getAllServices","marginBottom","display","justifyContent","color","flexDirection","gap","map","service","_id","state","items"],"sourceRoot":""}