{"version":3,"file":"static/js/541.fa095608.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee.jsx","pages/EmployeesPage/EmployeesPage.jsx","redux/employees/employeesSelectors.js"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { Backdrop, Modal, Form, Title, CloseButton } from '../Modal.styles';\nimport { TextField, Select, MenuItem, InputLabel } from '@mui/material';\n\nimport { addEmployee } from 'redux/employees/employeesOperations';\n\nexport const ModalAddEmployee = props => {\n  const dispatch = useDispatch();\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      phone: '',\n      criminal: '',\n      worksFromDate: '',\n    },\n    onSubmit: values => {\n      dispatch(addEmployee(values));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <Modal>\n        <CloseButton type=\"button\" onClick={handleExitModal}>\n          Закрити\n        </CloseButton>\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>Додати працівника</Title>\n          <TextField\n            required\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            label=\"Ім'я працівника\"\n            value={formik.values.name}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n          <TextField\n            required\n            type=\"tel\"\n            id=\"phone\"\n            name=\"phone\"\n            label=\"Номер телефона\"\n            value={formik.values.phone}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            className=\"field\"\n          />\n\n          <InputLabel id=\"criminal-label\">Чи є судимість:</InputLabel>\n          <Select\n            required\n            labelId=\"criminal-label\"\n            id=\"criminal\"\n            name=\"criminal\"\n            value={formik.values.criminal}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            <MenuItem value=\"Так\">Так</MenuItem>\n            <MenuItem value=\"Ні\">Ні</MenuItem>\n          </Select>\n          <TextField\n            required\n            type=\"date\"\n            id=\"worksFromDate\"\n            name=\"worksFromDate\"\n            value={formik.values.worksFromDate}\n            onChange={formik.handleChange}\n            variant=\"filled\"\n            className=\"field\"\n            style={{ width: '100%' }}\n          />\n          <button type=\"submit\" className=\"btn\">\n            Додати\n          </button>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ModalAddEmployee } from 'components/AdminPage/Modals/ModalAddEmployee/ModalAddEmployee';\n\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\nimport {\n  selectEmployees,\n  selectIsLoadingEmployees,\n} from 'redux/employees/employeesSelectors';\nimport { Loading } from 'components/Loading/Loading';\n\nconst EmployeesPage = () => {\n  const employees = useSelector(selectEmployees);\n  const isLoading = useSelector(selectIsLoadingEmployees);\n\n  const [isOpenModal, setOpenModal] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllEmployees());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  function calculateAge(date) {\n    const startDate = new Date(date);\n    const endDate = new Date();\n    let years = endDate.getFullYear() - startDate.getFullYear();\n    let months = endDate.getMonth() - startDate.getMonth();\n\n    if (months < 0) {\n      years--;\n      months += 12;\n    }\n\n    return `${years} р. ${months} міс.`;\n  }\n\n  if (isLoading) {\n    return <Loading />;\n  }\n  return (\n    <section>\n      <div\n        style={{\n          marginBottom: '50px',\n          display: 'flex',\n          justifyContent: 'space-between',\n        }}\n      >\n        <h2>Працівники</h2>\n        <button\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          className=\"btn\"\n          style={{ color: 'var(--white-color)' }}\n        >\n          Додати працівника\n        </button>\n      </div>\n\n      <ul\n        className=\"list\"\n        style={{ display: 'flex', flexDirection: 'column', gap: '20px' }}\n      >\n        {employees.map(employee => (\n          <li key={employee._id}>\n            <p>{`Ім'я: ${employee.name}`}</p>\n            <p>{`Телефон: ${employee.phone}`}</p>\n            <p>{`Судимість: ${employee.criminal}`}</p>\n            <p>{`Працює: ${calculateAge(employee.worksFromDate)}`}</p>\n          </li>\n        ))}\n      </ul>\n      {isOpenModal && <ModalAddEmployee handleExitModal={handleExitModal} />}\n    </section>\n  );\n};\n\nexport default EmployeesPage;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n"],"names":["ModalAddEmployee","props","dispatch","useDispatch","handleExitModal","formik","useFormik","initialValues","name","phone","criminal","worksFromDate","onSubmit","values","addEmployee","onClick","e","target","currentTarget","type","handleSubmit","TextField","required","id","label","value","onChange","handleChange","variant","className","InputLabel","Select","labelId","style","width","MenuItem","employees","useSelector","selectEmployees","isLoading","selectIsLoadingEmployees","useState","isOpenModal","setOpenModal","useEffect","getAllEmployees","calculateAge","date","startDate","Date","endDate","years","getFullYear","months","getMonth","Loading","marginBottom","display","justifyContent","color","flexDirection","gap","map","employee","_id","state","items"],"sourceRoot":""}