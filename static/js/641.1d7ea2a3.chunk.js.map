{"version":3,"file":"static/js/641.1d7ea2a3.chunk.js","mappings":"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","sources":["components/AdminPage/Modals/ModaAddOrder/ModaAddOrder.jsx","components/AdminPage/OrdersList/OrdersList.styled.jsx","components/AdminPage/OrdersItem/OrdersItem.styled.jsx","components/AdminPage/OrdersItem/OrdersItem.jsx","components/AdminPage/OrdersList/OrdersList.jsx","components/AdminPage/OrdersFilterList/OrdersFilterList.styled.jsx","components/AdminPage/OrdersFilterList/OrdersFilterList.jsx","pages/OrdersPage/OrdersPage.jsx","redux/Auth/AuthSelectors.js","redux/employees/employeesSelectors.js","redux/orders/ordersSelectors.js","redux/services/servicesSelectors.js","utils/formatedDate.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFormik } from 'formik';\n\nimport { Backdrop, Modal, Form, Title, CloseButton } from '../Modal.styles';\nimport { Select, MenuItem, TextField } from '@mui/material';\n\nimport { getAllServices } from 'redux/services/servicesOperations';\nimport { getAllEmployees } from 'redux/employees/employeesOperations';\n\nimport { selectGetAllServices } from 'redux/services/servicesSelectors';\nimport { selectEmployees } from 'redux/employees/employeesSelectors';\n\nimport { addNewOrder } from 'redux/orders/ordersOperations';\nimport { getAdministrators } from 'redux/Auth/AuthOperations';\nimport { selectAdministrators } from 'redux/Auth/AuthSelectors';\n\nexport const ModaAddOrder = props => {\n  const services = useSelector(selectGetAllServices);\n  const employees = useSelector(selectEmployees);\n  const admins = useSelector(selectAdministrators);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllServices());\n    dispatch(getAllEmployees());\n    dispatch(getAdministrators());\n  }, [dispatch]);\n\n  const handleExitModal = () => {\n    props.handleExitModal(true);\n  };\n\n  const handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      handleExitModal(true);\n    }\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      clientName: '',\n      clientPhone: '',\n      clientComment: '',\n      serviceObject: '',\n      payment: '',\n      orderDate: '',\n      services: '',\n      washer: '',\n      administrator: '',\n      discountPercent: '',\n      urgently: '',\n    },\n    onSubmit: values => {\n      const filteredValues = {};\n      for (const key in values) {\n        if (values[key] !== '') {\n          filteredValues[key] = values[key];\n        }\n      }\n      if (filteredValues.services) {\n        filteredValues.services = [filteredValues.services];\n      }\n      dispatch(addNewOrder(filteredValues));\n      handleExitModal();\n    },\n  });\n\n  return (\n    <Backdrop onClick={handleBackdropClick}>\n      <Modal>\n        <CloseButton type=\"button\" onClick={handleExitModal}>\n          Закрити\n        </CloseButton>\n        <Form onSubmit={formik.handleSubmit}>\n          <Title>Створити замовлення</Title>\n          <TextField\n            required\n            type=\"text\"\n            id=\"clientName\"\n            name=\"clientName\"\n            label=\"Ім'я клієнта\"\n            value={formik.values.clientName}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <TextField\n            required\n            type=\"text\"\n            id=\"clientPhone\"\n            name=\"clientPhone\"\n            label=\"Телефон клієнта\"\n            value={formik.values.clientPhone}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <TextField\n            type=\"text\"\n            id=\"clientComment\"\n            name=\"clientComment\"\n            label=\"Коментар клієнта\"\n            value={formik.values.clientComment}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <TextField\n            required\n            type=\"text\"\n            id=\"serviceObject\"\n            name=\"serviceObject\"\n            label=\"Об'єкт послуг\"\n            value={formik.values.serviceObject}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <TextField\n            required\n            type=\"datetime-local\"\n            id=\"orderDate\"\n            name=\"orderDate\"\n            value={formik.values.orderDate}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <TextField\n            type=\"number\"\n            id=\"discountPercent\"\n            name=\"discountPercent\"\n            label=\"Відсоток знижки, %\"\n            value={formik.values.discountPercent}\n            onChange={formik.handleChange}\n            inputProps={{ min: '1' }}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          />\n          <Select\n            id=\"payment\"\n            name=\"payment\"\n            value={formik.values.payment}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            <MenuItem value=\"Готівка\">Готівка</MenuItem>\n            <MenuItem value=\"Безготівка\">Безготівка</MenuItem>\n          </Select>\n\n          <Select\n            id=\"services\"\n            name=\"services\"\n            value={formik.values.services}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            {services.map(service => (\n              <MenuItem value={service} key={service._id}>\n                {`${service.category}. ${service.name}. ${service.price}грн`}\n              </MenuItem>\n            ))}\n          </Select>\n          <Select\n            id=\"washer\"\n            name=\"washer\"\n            value={formik.values.washer}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            {employees.map(washer => (\n              <MenuItem value={washer.name} key={washer._id}>\n                {washer.name}\n              </MenuItem>\n            ))}\n          </Select>\n          <Select\n            id=\"administrator\"\n            name=\"administrator\"\n            value={formik.values.administrator}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            {admins.map(admin => (\n              <MenuItem value={admin.name} key={admin._id}>\n                {admin.name}\n              </MenuItem>\n            ))}\n          </Select>\n          <Select\n            id=\"urgently\"\n            name=\"urgently\"\n            value={formik.values.urgently}\n            onChange={formik.handleChange}\n            variant=\"standard\"\n            style={{ width: '100%' }}\n          >\n            <MenuItem value={true}>Так</MenuItem>\n            <MenuItem value={false}>Ні</MenuItem>\n          </Select>\n          <button type=\"submit\" className=\"btn\">\n            Додати\n          </button>\n        </Form>\n      </Modal>\n    </Backdrop>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  list-style: none;\n`;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Item = styled.li`\n  padding: 20px;\n  background-color: var(--admin-items-bg-color);\n`;\n\nexport const OrderHeader = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n`;\n\nexport const OrderLink = styled(Link)`\n  font-size: 16px;\n  font-weight: 700;\n  color: var(--white-color);\n  &:hover {\n    color: var(--accent-color);\n  }\n`;\n\nexport const MarkUrgency = styled.b`\n  background-color: red;\n  font-size: 12px;\n`;\n\nexport const StatusButton = styled.button`\n  background-color: ${props => props.color};\n  padding: 5px;\n  margin-left: auto;\n  min-width: 75px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n","import {\n  Item,\n  OrderHeader,\n  OrderLink,\n  MarkUrgency,\n  StatusButton,\n} from './OrdersItem.styled';\n\nimport { formatedDate } from 'utils/formatedDate';\n\nexport const OrdersItem = ({ order }) => {\n  const statusStyles = ({ order }) => {\n    if (order.status === 'Нове') {\n      return 'status__btn status__btn--new';\n    } else if (order.status === 'В роботі') {\n      return 'status__btn status__btn--in-process';\n    } else if (order.status === 'Скасоване') {\n      return 'status__btn status__btn--canceled';\n    } else {\n      return 'status__btn status__btn--completed';\n    }\n  };\n\n  return (\n    <Item>\n      {order.urgently && <MarkUrgency>Терміново!</MarkUrgency>}\n      <OrderHeader>\n        <OrderLink to={`/admin/order/${order.orderNumber}`}>\n          {`Замовлення ${order.orderNumber}`}\n        </OrderLink>\n        <StatusButton type=\"button\" className={statusStyles({ order })}>\n          {`${order.status}`}\n        </StatusButton>\n      </OrderHeader>\n      <hr />\n      <p>{`Клієнт: ${order.clientName}`}</p>\n      <p>{`Контакти: ${order.clientPhone}`}</p>\n      <p>{`Об'єкт замовлення: ${\n        order.serviceObject ? order.serviceObject : ''\n      }`}</p>\n\n      <p>{`Дата та час послуги: ${formatedDate(order.orderDate)}`}</p>\n      {order.orderExecutionDate && (\n        <p>{`Дата та час виконання: ${formatedDate(\n          order.orderExecutionDate\n        )}`}</p>\n      )}\n      <hr />\n      <p>{`Працівник: ${order.washer ? order.washer : ''}`}</p>\n      <p>{`Адміністратор: ${\n        order.administrator ? order.administrator : ''\n      }`}</p>\n      <hr />\n      <p>{`Вартість замовлення: ${order.discountedCostOrder} грн`}</p>\n    </Item>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { selectOrders } from 'redux/orders/ordersSelectors';\nimport { getAllOrders } from 'redux/orders/ordersOperations';\n\nimport { List } from './OrdersList.styled';\nimport { OrdersItem } from '../OrdersItem/OrdersItem';\n\nexport const OrdersList = () => {\n  const orders = useSelector(selectOrders);\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const status = queryParams.get('status') || '';\n  const page = queryParams.get('page') || 1;\n\n  useEffect(() => {\n    dispatch(getAllOrders({ status, page }));\n  }, [dispatch, status, page]);\n\n  return (\n    <List>\n      {orders.map(order => (\n        <OrdersItem key={order._id} order={order} />\n      ))}\n    </List>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const FilterList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  list-style: none;\n`;\n\nexport const FilterItem = styled.li``;\n\nexport const FilterButton = styled.button`\n  background-color: ${props => props.color};\n  padding: 5px;\n  min-width: 75px;\n  border: none;\n  border-radius: 8px;\n  cursor: pointer;\n`;\n","import { useLocation, useNavigate } from 'react-router-dom';\n\nimport {\n  FilterList,\n  FilterItem,\n  FilterButton,\n} from './OrdersFilterList.styled';\n\nexport const OrdersFilterList = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const queryParams = new URLSearchParams(location.search);\n\n  const handleStatusFilter = e => {\n    let updatedStatus = '';\n\n    if (e.target.textContent === 'Всі') {\n      updatedStatus = '';\n    } else if (e.target.textContent === 'Нові') {\n      updatedStatus = 'Нове';\n    } else if (e.target.textContent === 'В роботі') {\n      updatedStatus = 'В роботі';\n    } else if (e.target.textContent === 'Виконані') {\n      updatedStatus = 'Виконане';\n    } else if (e.target.textContent === 'Скасовані') {\n      updatedStatus = 'Скасоване';\n    }\n\n    queryParams.set('status', updatedStatus);\n\n    navigate(\n      `/admin/orders?${\n        updatedStatus.length > 0 ? `status=${updatedStatus}` : ''\n      }&page=1`\n    );\n  };\n\n  return (\n    <FilterList>\n      <FilterItem>\n        <FilterButton\n          type=\"button\"\n          color=\"var(--filter-all-color)\"\n          onClick={e => {\n            handleStatusFilter(e);\n          }}\n        >\n          Всі\n        </FilterButton>\n      </FilterItem>\n      <FilterItem>\n        <FilterButton\n          type=\"button\"\n          color=\"var(--filter-new-color)\"\n          onClick={e => {\n            handleStatusFilter(e);\n          }}\n        >\n          Нові\n        </FilterButton>\n      </FilterItem>\n      <FilterItem>\n        <FilterButton\n          type=\"button\"\n          color=\"var(--filter-inProcess-color)\"\n          onClick={e => {\n            handleStatusFilter(e);\n          }}\n        >\n          В роботі\n        </FilterButton>\n      </FilterItem>\n      <FilterItem>\n        <FilterButton\n          type=\"button\"\n          color=\"var(--filter-completed-color)\"\n          onClick={e => {\n            handleStatusFilter(e);\n          }}\n        >\n          Виконані\n        </FilterButton>\n      </FilterItem>\n      <FilterItem>\n        <FilterButton\n          type=\"button\"\n          color=\"var(--filter-cancelled-color)\"\n          onClick={e => {\n            handleStatusFilter(e);\n          }}\n        >\n          Скасовані\n        </FilterButton>\n      </FilterItem>\n    </FilterList>\n  );\n};\n","import { useState } from 'react';\n\nimport { ModaAddOrder } from 'components/AdminPage/Modals/ModaAddOrder/ModaAddOrder';\nimport { OrdersList } from '../../components/AdminPage/OrdersList/OrdersList';\nimport { OrdersFilterList } from 'components/AdminPage/OrdersFilterList/OrdersFilterList';\n\nconst OrdersPage = () => {\n  const [isOpenModal, setOpenModal] = useState(false);\n\n  const handleExitModal = () => {\n    setOpenModal(false);\n  };\n\n  return (\n    <section>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          gap: '20px',\n          marginBottom: '20px',\n        }}\n      >\n        <button\n          type=\"button\"\n          onClick={() => setOpenModal(true)}\n          className=\"btn\"\n          style={{ marginLeft: 'auto', color: 'white' }}\n        >\n          Створити замовлення\n        </button>\n        <OrdersFilterList />\n      </div>\n\n      <OrdersList />\n      {isOpenModal && <ModaAddOrder handleExitModal={handleExitModal} />}\n    </section>\n  );\n};\n\nexport default OrdersPage;\n","export const selectAuth = state => {\n  const { isLoggedIn, token } = state.auth;\n  return { isLoggedIn, token };\n};\n\nexport const selectIsAuthLoading = state => state.auth.isLoading;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectError = state => state.auth.error;\n\nexport const selectToken = state => state.auth.token;\n\nexport const selectAdministrators = state => state.auth.administrators;\n\n// export const selectUserAvatar = state => state.auth.user.avatarURL;\n\n// export const selectIsRefreshing = state => state.auth.isRefreshing;\n\n// export const selectIsLoading = state => state.auth.isLoading;\n\n// export const selectUserId = state => state.auth.user.id;\n","export const selectEmployees = state => state.employees.items;\n\nexport const selectIsLoadingEmployees = state => state.employees.isLoading;\n","// бере зі стейту оголошення по категорії\nexport const selectOrders = state => state.orders.items;\n\n// Отримуємо замовлення по номеру\nexport const selectOrderByNumber = state => state.orders.orderByNumber;\n\n// Отримуємо статус завантаження\nexport const selectIsLoadingOrders = state => state.orders.isLoading;\n\n// бере зі стейту кількість сторінок у відповіді\n// export const selectTotalPages = state => state.notices.totalPages;\n// бере зі стейту чи завантажується\n// export const selectIsNoticeLoading = state => state.notices.isLoading;\n// export const selectCategory = state => state.notices.category;\n// export const selectIsFavorite = state => state.notices.isFavorite;\n\n// export const selectNotice = state => state.notices.notice;\n\n// export const selectNoticesFavorite = state => state.notices.noticesFavorite;\n\n// export const selectNoticesMyAds = state => state.notices.noticesMyAds;\n","export const selectGetAllServices = state => state.services.items;\n\nexport const selectIsLoadingServices = state => state.services.isLoading;\n","export function formatedDate(unformatedDate) {\n  const dateTime = new Date(unformatedDate);\n\n  const date = dateTime.toLocaleDateString('uk-UA', {\n    day: '2-digit',\n    month: '2-digit',\n    year: 'numeric',\n  });\n\n  const time = dateTime.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit',\n  });\n\n  return `${date} | ${time}`;\n}\n"],"names":["ModaAddOrder","props","services","useSelector","selectGetAllServices","employees","selectEmployees","admins","selectAdministrators","dispatch","useDispatch","useEffect","getAllServices","getAllEmployees","getAdministrators","handleExitModal","formik","useFormik","initialValues","clientName","clientPhone","clientComment","serviceObject","payment","orderDate","washer","administrator","discountPercent","urgently","onSubmit","values","filteredValues","key","addNewOrder","onClick","e","target","currentTarget","type","handleSubmit","TextField","required","id","name","label","value","onChange","handleChange","variant","style","width","inputProps","min","Select","MenuItem","map","service","category","price","_id","admin","className","List","styled","Item","OrderHeader","OrderLink","Link","MarkUrgency","StatusButton","color","OrdersItem","order","to","orderNumber","status","statusStyles","formatedDate","orderExecutionDate","discountedCostOrder","OrdersList","orders","selectOrders","location","useLocation","queryParams","URLSearchParams","search","get","page","getAllOrders","FilterList","FilterItem","FilterButton","OrdersFilterList","navigate","useNavigate","handleStatusFilter","updatedStatus","textContent","set","length","useState","isOpenModal","setOpenModal","display","flexDirection","gap","marginBottom","marginLeft","selectIsLoggedIn","state","auth","isLoggedIn","administrators","items","selectIsLoadingEmployees","isLoading","selectOrderByNumber","orderByNumber","selectIsLoadingOrders","unformatedDate","dateTime","Date","date","toLocaleDateString","day","month","year","time","toLocaleTimeString","hour","minute"],"sourceRoot":""}